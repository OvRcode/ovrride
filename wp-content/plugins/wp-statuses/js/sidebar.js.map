{"mappings":"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","sources":["src/sidebar/sidebar.js"],"sourcesContent":["/**\n * WordPress dependencies.\n */\nconst {\n\tapiFetch,\n\tblocks: {\n\t\tsynchronizeBlocksWithTemplate,\n\t},\n\tcomponents: {\n\t\tSelectControl,\n\t\tTextControl,\n\t},\n\tcompose: {\n\t\tcompose,\n\t},\n\tdata: {\n\t\twithSelect,\n\t\twithDispatch,\n\t\tregisterStore,\n\t},\n\tdate: {\n\t\tisInTheFuture,\n\t},\n\teditPost: {\n\t\tPluginPostStatusInfo,\n\t},\n\telement: {\n\t\tcreateElement,\n\t\tComponent,\n\t},\n\ti18n: {\n\t\t__,\n\t\tsprintf,\n\t},\n\tplugins: {\n\t\tregisterPlugin,\n\t},\n} = wp;\n\n/**\n * External dependencies.\n */\nconst {\n\tget,\n\tindexOf,\n\tforEach,\n\tmap,\n} = lodash;\n\nconst DEFAULT_STATE = {\n    stati: {},\n}\n\nconst actions = {\n\tgetStati( stati ) {\n\t\treturn {\n\t\t\ttype: 'GET_STATI',\n\t\t\tstati,\n\t\t};\n\t},\n\n\tfetchFromAPI( path ) {\n\t\treturn {\n\t\t\ttype: 'FETCH_FROM_API',\n\t\t\tpath,\n\t\t};\n\t},\n};\n\nregisterStore( 'wp-statuses', {\n\treducer( state = DEFAULT_STATE, action ) {\n\t\tif ( 'GET_STATI' === action.type ) {\n            return {\n                ...state,\n                stati: action.stati,\n            };\n\t\t}\n\n\t\treturn state;\n\t},\n\n\tactions,\n\n\tselectors: {\n\t\tgetStati( state ) {\n\t\t\treturn state.stati;\n\t\t},\n\t},\n\n\tcontrols: {\n\t\tFETCH_FROM_API( action ) {\n\t\t\treturn apiFetch( { path: action.path } );\n\t\t},\n\t},\n\n\tresolvers: {\n\t\t* getStati() {\n\t\t\tconst path = '/wp/v2/statuses?context=edit';\n\t\t\tconst stati = yield actions.fetchFromAPI( path );\n\t\t\treturn actions.getStati( stati );\n\t\t},\n\t},\n} );\n\nclass WPStatusesPanel extends Component {\n\tconstructor() {\n\t\tsuper( ...arguments );\n\n\t\tthis.state = {\n\t\t\tisValid: false,\n\t\t}\n\t}\n\n\tcomponentDidMount() {\n\t\tconst { settings, currentPost, customStatus, insertBlocks, onUpdateStatus } = this.props;\n\t\tconst { isValid } = this.state;\n\n\t\tif ( ! isValid && 'auto-draft' === customStatus && ! currentPost.content ) {\n\t\t\tconst template = synchronizeBlocksWithTemplate( [], settings.template );\n\n\t\t\tif ( template && template.length >= 1 ) {\n\t\t\t\tinsertBlocks( template );\n\t\t\t}\n\n\t\t\tthis.setState( { isValid: true } );\n\t\t}\n\t}\n\n\trender() {\n\t\tconst {\n\t\t\tonUpdateStatus,\n\t\t\tpostType,\n\t\t\tcurrentPost,\n\t\t\tstati,\n\t\t\tpassword,\n\t\t\tpostTitle,\n\t\t\tcustomStatus\n\t\t} = this.props;\n\t\tlet { currentStatus } = this.props;\n\n\t\tconst needsPassword = 'password' === currentStatus;\n\t\tconst hasPublishAction = get( currentPost, [ '_links', 'wp:action-publish' ], false );\n\n\t\tif ( isInTheFuture( currentPost.date_gmt ) && 'future' !== currentStatus ) {\n\t\t\tcurrentStatus = 'future';\n\t\t\tonUpdateStatus( currentStatus );\n\t\t}\n\n\t\tif ( 'future' === currentStatus && stati.publish ) {\n\t\t\treturn (\n\t\t\t\t<PluginPostStatusInfo className=\"wp-statuses-info\">\n\t\t\t\t\t{\n\t\t\t\t\t\tsprintf(\n\t\t\t\t\t\t\t/* translators: %s is the label of the publish status. */\n\t\t\t\t\t\t\t__( 'Next status will be \"%s\" once the scheduled date will be reached.', 'wp-statuses' ),\n\t\t\t\t\t\t\tstati.publish.label\n\t\t\t\t\t\t)\n\t\t\t\t\t}\n\t\t\t\t</PluginPostStatusInfo>\n\t\t\t);\n\t\t}\n\n\t\t// As the draft status is selected by default, let's avoid saving auto-drafts.\n\t\tif ( postTitle !== currentPost.title && 'auto-draft' === customStatus ) {\n\t\t\tonUpdateStatus( currentStatus );\n\t\t}\n\n\t\tlet options = [];\n\t\tif ( postType && postType.slug ) {\n\t\t\tforEach( stati, function( data ) {\n\t\t\t\tif ( -1 !== indexOf( data.post_type, postType.slug ) && ( hasPublishAction || -1 !== indexOf( ['draft', 'pending'], data.slug ) ) ) {\n\t\t\t\t\toptions.push( { label: data.label, value: data.slug } );\n\t\t\t\t}\n\t\t\t} );\n\t\t}\n\n\t\treturn (\n\t\t\t<PluginPostStatusInfo className=\"wp-statuses-info\">\n\t\t\t\t<SelectControl\n\t\t\t\t\tlabel={ __( 'Status', 'wp-statuses' ) }\n\t\t\t\t\tvalue={ currentStatus }\n\t\t\t\t\tonChange={ ( status ) => onUpdateStatus( status ) }\n\t\t\t\t\toptions={ options }\n\t\t\t\t/>\n\n\t\t\t\t{ needsPassword &&\n\t\t\t\t\t<TextControl\n\t\t\t\t\t\tlabel={ __( 'Password', 'wp-statuses' ) }\n\t\t\t\t\t\tvalue={ password }\n\t\t\t\t\t\tclassName=\"wp-statuses-password\"\n\t\t\t\t\t\tonChange={ ( password ) => onUpdateStatus( currentStatus, password ) }\n\t\t\t\t\t/>\n\t\t\t\t}\n\t\t\t</PluginPostStatusInfo>\n\t\t);\n\t}\n}\n\nconst WPStatusesInfo = compose( [\n\twithSelect( ( select ) => {\n\t\tconst { getEditedPostAttribute, getCurrentPost } = select( 'core/editor' );\n\t\tconst { getPostType } = select( 'core' );\n\t\tconst postTypeName = getEditedPostAttribute( 'type' );\n\t\tconst stati = select( 'wp-statuses' ).getStati();\n\t\tconst customStatus = getEditedPostAttribute( 'custom_status' );\n\n\t\treturn {\n\t\t\tpostType: getPostType( postTypeName ),\n\t\t\tcustomStatus: customStatus,\n\t\t\tcurrentStatus: ! customStatus || 'auto-draft' === customStatus ? 'draft' : customStatus,\n\t\t\tcurrentPost: getCurrentPost(),\n\t\t\tstati: stati,\n\t\t\tpassword: getEditedPostAttribute( 'password' ),\n\t\t\tsettings: select( 'core/editor' ).getEditorSettings(),\n\t\t};\n\t} ),\n\twithDispatch( ( dispatch ) => {\n\t\tconst { editPost, resetEditorBlocks } = dispatch( 'core/editor' );\n\n\t\treturn {\n\t\t\tonUpdateStatus: ( WPStatusesStatus, password = '' ) => {\n\t\t\t\teditPost( {\n\t\t\t\t\tcustom_status: WPStatusesStatus,\n\t\t\t\t\tpassword: password,\n\t\t\t\t} );\n\t\t\t},\n\t\t\tinsertBlocks: ( template ) => {\n\t\t\t\tresetEditorBlocks( template );\n\t\t\t}\n\t\t};\n\t} ),\n] )( WPStatusesPanel );\n\nregisterPlugin( 'wp-statuses-sidebar', {\n\trender: WPStatusesInfo,\n} );\n"],"names":["apiFetch","blocks","synchronizeBlocksWithTemplate","components","SelectControl","TextControl","compose","data","withSelect","withDispatch","registerStore","date","isInTheFuture","editPost","PluginPostStatusInfo","element","createElement","Component","i18n","__","sprintf","plugins","registerPlugin","wp","get","indexOf","forEach","map","lodash","DEFAULT_STATE","stati","actions","getStati","type","fetchFromAPI","path","reducer","state","action","selectors","controls","FETCH_FROM_API","resolvers","WPStatusesInfo","select","getEditedPostAttribute","getCurrentPost","getPostType","postTypeName","customStatus","postType","currentStatus","currentPost","password","settings","getEditorSettings","dispatch","resetEditorBlocks","onUpdateStatus","WPStatusesStatus","custom_status","insertBlocks","template","componentDidMount","this","props","isValid","content","length","setState","render","postTitle","needsPassword","hasPublishAction","date_gmt","publish","$7ca38c7aab47a8d6$var$createElement","$7ca38c7aab47a8d6$var$PluginPostStatusInfo","className","label","title","options","slug","post_type","push","value","$7ca38c7aab47a8d6$var$SelectControl","onChange","status","$7ca38c7aab47a8d6$var$TextControl","constructor","super","arguments"],"version":3,"file":"sidebar.js.map"}