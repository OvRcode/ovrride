{
  "name": "mysqld",
  "description": "Installs/Configures mysqld",
  "long_description": "# mysqld Cookbook\n\nManage your mysqld servers with this cookbook.\nUnlike the official [opscode mysql cookbook](https://github.com/opscode-cookbooks/mysql),\nit doesn't mess with the default mysql configuration. If you do not specify anything explicitly, the\ndefaults of your distribution will be used.\n(At least if I do not mess up - Check the\n[default attributes](https://github.com/chr4/chef-mysqld/blob/master/attributes/defaults.rb),\nif unsure (and file a pull request if you need to correct anything))\n\nFeatures\n\n* Defaults to OS settings unless explicitly specified otherwise\n* Supports **all** my.cnf settings\n\nCurrently tested on Ubuntu, should work on RHEL and Debian as well.\n[Contributions](https://github.com/chr4/chef-mysqld#contributing) to support other systems are very\nwelcome!\n\n## Requirements\n\nYou need to add the following line to your metadata.rb\n\n    depends 'mysqld'\n\n\n## Attributes\n\n### Configuration\n\nEverything in your my.cnf can be maintained using attributes.\nConsider using the provides LWRPs (see below)\n\nIf you do not specify anything, the defaults of your os will be used.\n\nThis recipe supports **every** setting in the my.cnf.  All your settings will be merged with the\nsystems default, and then written to the my.cnf config file. The packages to install, the path to\nmy.cnf as well as the name of the service are set automatically, and can be overwritten using the\nfollowing attributes:\n\n\n```ruby\nnode['mysqld']['my.cnf_path']\nnode['mysqld']['service_name']\nnode['mysqld']['mysql_packages']          # When using mysql_install recipe\nnode['mysqld']['mariadb_packages']        # When using mariadb_install recipe\nnode['mysqld']['mariadb_galera_packages'] # When using mariadb_galera_install recipe\n```\n\nThe configuration is stored in the ```node['mysqld']['my.cnf']``` hash, and can be adapted like so\n\n\n```ruby\n# node['mysqld']['my.conf'][<category>][<key>] = <value>\nnode['mysqld']['my.cnf']['mysqld']['bind-address'] = '0.0.0.0'\n```\n\nThis will expand to the following in your config file (leaving all other settings untouched)\n\n```\n[mysqld]\n  bind-address = 0.0.0.0\n```\n\nTo remove a default option, you can pass `false` or `nil` as the value\n\n```ruby\n# Remove deprecated innodb option\ndefault['mysqld']['my.cnf']['mysqld']['innodb_additional_mem_pool_size'] = false\n```\n\nAs the configuration file is constructed from the config hash, every my.cnf configuration option is\nsupported.\n\n\n```ruby\nnode['mysqld']['root_password'] = 'yourpass'\n```\n\n\n\n## Recipes\n\n### default\n\n- Setup official MariaDB repository\n- Install MariaDB server\n- Configure MariaDB server according to the attributes. If no attributes are given, stick with the\n  systems default\n\n\n### mariadb\\_repository\n\nRuns `mariadb_apt_repository` or `mariadb_yum_repository` recipe according to your platform\n\n### mariadb\\_apt\\_repository\n\nSets up official MariaDB repository to install packages from.\nConfigure it using the following attributes\n\n```ruby\nnode['mysqld']['repository']['version'] # Defaults to '10.1'\nnode['mysqld']['repository']['mirror']  # Defaults to HostEurope mirror\n```\n\n### mariadb\\_yum\\_repository\n\nSets up official MariaDB repository to install packages from.\nConfigure it using the following attributes\n\n```ruby\nnode['mysqld']['repository']['version'] # Defaults to '10.1'\nnode['mysqld']['repository']['mirror']  # Defaults to HostEurope mirror\n```\n\n### mariadb\\_install\n\nInstall mariadb packages (according to attributes, defaults to `mariadb-server`)\n\n### mysql\\_install\n\nInstall mysql packages (according to attributes, defaults to `mysql-server`)\n\n### configure\n\nConfigure mysql according to attributes. Sets the databases root account (resp. debian-sys-maint on\nDebian/Ubuntu systems) to use the password in `node['mysqld']['root_password']`, if the attribute is\nset.\n\n### mariadb\\_galera\\_init\n\nRun `mariadb\\_repository` and `mariadb\\_galera\\_install` recipes, then configure as the `configure`\nrecipe would do, but start mariadb with `--wsrep-new-cluster --wsrep\\_cluster\\_address=gcomm://` to\ninitialize a new Galera cluster.\n\nUse this if you want to setup a new Galera cluster, and run it on your first node once:\n\n```bash\n$ sudo chef-client --once -o 'recipe[mysqld::mariadb_galera_init]'\n```\n\nOnce you connected the other nodes using the regular recipes, re-run chef-client as you did on the\nother servers.\n\n*Note: If you use a wrapper cookbook to configure your instances, attributes might not be available\nwhen running the recipe with `-o recipe[]`. Create a mariadb_galera_init recipe in your wrapper\ncookbook, calling this recipe if you have trouble.*\n\n\n## Providers\n\n### mysqld\n\nYou can configure your database also using the `mysqld` provider:\n\n\n```ruby\ninclude_recipe 'mysqld::mariadb_galera_install'\n\n# Name attribute will be ignored. Choose something that makes sense for you\nmysqld 'galera' do\n  my_cnf { 'bind-address' => '0.0.0.0' }\nend\n```\n\n### password\n\nYou can set passwords (incl. root and debian-sys-maint accounts) using this provider.\nBy default, the provider uses the created root/debian-sys-maint accounts depending on the system you\nare on.\n\n```ruby\nmysqld_password 'root' do\n  password 'get_from_data_bag_maybe?'\n\n  # If required, you can specify your own auth-scheme here\n  # auth '-u specialuser -pmypass'\nend\n```\n\n\n# Contributing\n\nContributions are very welcome!\n\n1. Fork the repository on Github\n2. Create a named feature branch (like `add_component_x`)\n3. Write you change\n4. Write tests for your change (if applicable)\n5. Run the tests, ensuring they all pass\n6. Submit a Pull Request using Github\n\n\n# License and Authors\n\nAuthors: Chris Aumann <me@chr4.org>\n\nLicense: GPLv3\n",
  "maintainer": "Chris Aumann",
  "maintainer_email": "chris.aumann@rndsec.net",
  "license": "GNU Public License 3.0",
  "platforms": {

  },
  "dependencies": {
    "apt": ">= 0.0.0",
    "yum": ">= 0.0.0"
  },
  "recommendations": {

  },
  "suggestions": {

  },
  "conflicting": {

  },
  "providing": {

  },
  "replacing": {

  },
  "attributes": {

  },
  "groupings": {

  },
  "recipes": {

  },
  "version": "1.0.3",
  "source_url": "",
  "issues_url": ""
}
